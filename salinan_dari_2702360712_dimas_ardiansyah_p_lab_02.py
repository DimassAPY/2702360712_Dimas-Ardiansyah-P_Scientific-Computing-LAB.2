# -*- coding: utf-8 -*-
"""Salinan dari 2702360712_Dimas Ardiansyah P_LAB-02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XjvU3Ns-DnkhRRUp43iUL7s1Xvw6fnpM
"""

import numpy as np
a = [[8, 3, -3], [-2, -8, 5], [3, 5, 10]]

diag = np.diag(np.abs(a))

off_diag = np.sum(np.abs(a), axis=1) - diag

if np.all(diag > off_diag):
  print('matrix is diagonally dominant')
else:
  print('NOT diagonally dominant')

x1 = 0
x2 = 0
x3 = 0
epsilon = 0.01
converged = False

x_old = np.array([x1, x2, x3])

print('Iteration results')
print('k, x1, x2, x3')
for k in range(1, 50):
  x1 = (14-3*x2+3*x3)/8
  x2 = (5+2*x1-5*x3)/(-8)
  x3 = (-8-3*x1-5*x2)/(10)
  x = np.array([x1, x2, x3])

  dx = np.sqrt(np.dot(x-x_old, x-x_old))

  print("%d, %.4f, %.4f, %.4f"%(k, x1, x2, x3))
  if dx < epsilon:
    converged = True
    print('Converged!')
    break

    x_old = x

  if not converged:
    print('Not converged, increase the # of iterations')

import numpy as np

A = np.array([[4, 3, -5],
              [-2, -4, 5],
              [8, 8, 0]])
y = np.array([2, 5, -3])

x = np.linalg.solve(A, y)
print(x)

A_inv = np.linalg.inv(A)

x=np.dot(A_inv,y)
print(x)

import numpy as np
from scipy import optimize
import matplotlib.pyplot as plt

plt.style.use('seaborn-poster')

x = np.linspace(0, 1, 101)
y = 1 + x + x + np.random.random(len(x))

A = np.vstack([x, np.ones(len(x))]).T

y = y[:, np.newaxis]

alpha = np.dot((np.dot(np.linalg.inv(np.dot (A.T, A)), A.T)),y)
print(alpha)

plt.figure(figsize = (10,8))
plt.plot(x,y, 'b.')
plt.plot(x, alpha[0]*x + alpha[1], 'r')
plt.xlabel('x')
plt.ylabel('y')
plt.show()

pinv = np.linalg.pinv(A)
alpha = pinv.dot(y)
print(alpha)